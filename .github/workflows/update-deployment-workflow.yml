## REUSABLE WORKFLOW
name: Create deployment Workflow

on:
  workflow_call:
    inputs:
      stage:
        required: true
        type: string

jobs:
  update-deployment:
    name: Update deployment
    runs-on: ubuntu-latest
    steps:
      - name: retrieve DEPLOY_ID
        uses: actions/download-artifact@master
        with:
          name: DEPLOY_ID
          path: .

      - name: "update deployment status [SUCCESS]"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh api --method POST \
            repos/${GITHUB_REPOSITORY}/deployments/$(cat DEPLOY_ID)/statuses \
            -H "Accept: application/vnd.github+json" \
            -F environment=${{ inputs.stage }} \
            -F state='success' \
            -F description='Deployment success.'
      - name: update release note
        if: inputs.stage == "prod"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          substitute() {
            perl -i -0pe "s/$1/$2/s" $3
          }
          LATEST_RELEASE=$(gh release list -L 1 -R $GITHUB_REPOSITORY | cut -f 3)
          gh release view > release.md
          now=$(date '+%Y-%m-%d %H:%M:%S')
          #Remove deploy button
          substitute '### :truck: Deployment in Progress...' "## :rocket: Deployed on \\\`$now\\\`" release.md
          gh release edit $LATEST_RELEASE --notes-file release.md
            